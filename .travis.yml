sudo: false

matrix:
  include:
    - env: CABALVER=1.18 GHCVER=7.8.4
      addons: {apt: {packages: [cabal-install-1.18,ghc-7.8.4,libssl-dev], sources: [hvr-ghc]}}
    - env: CABALVER=1.22 GHCVER=7.10.3
      addons: {apt: {packages: [cabal-install-1.22,ghc-7.10.3,libssl-dev], sources: [hvr-ghc]}}
    - env: CABALVER=1.24 GHCVER=8.0.2
      addons: {apt: {packages: [cabal-install-1.24,ghc-8.0.2,libssl-dev], sources: [hvr-ghc]}}
    - env: CABALVER=1.24 GHCVER=8.2.1
      addons: {apt: {packages: [cabal-install-1.24,ghc-8.2.1,libssl-dev], sources: [hvr-ghc]}}
    - env: CABALVER=head GHCVER=head RUNTEST=0
      addons: {apt: {packages: [cabal-install-head,ghc-head,libssl-dev], sources: [hvr-ghc]}}

  allow_failures:
   - env: CABALVER=head GHCVER=head RUNTEST=0

before_install:
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH

install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - travis_retry cabal update
 - cabal install utf8-string
 - cd core
 - |
    set -e
    if [ "${RUNTEST}" != "0" ]; then
      cabal install --only-dependencies --enable-tests
    else
      cabal install --only-dependencies
      cabal install random
    fi
    cabal install
 - cd ../debug
 - if [ "${RUNTEST}" != "0" ]; then cabal install --only-dependencies --enable-tests; else cabal install --only-dependencies; fi

script:
 - cd ../core
 - if [ "${RUNTEST}" != "0" ]; then cabal configure --enable-tests -v2; else cabal configure -v2; fi
 - cabal build
 - if [ "${RUNTEST}" != "0" ]; then cabal test; fi;
 - cabal check
 - cabal sdist
 - export SRC_TGZ=$(cabal info . | awk '{print $2 ".tar.gz";exit}') ;
   cd dist/;
   if [ -f "$SRC_TGZ" ]; then
      cabal install --force-reinstalls "$SRC_TGZ";
   else
      echo "expected '$SRC_TGZ' not found";
      exit 1;
   fi
 - cd ../../debug
 - cabal configure -v2
 - cabal build
 - cabal check
 - cabal sdist
 - export SRC_TGZ=$(cabal info . | awk '{print $2 ".tar.gz";exit}') ;
   cd dist/;
   if [ -f "$SRC_TGZ" ]; then
      cabal install --force-reinstalls "$SRC_TGZ";
   else
      echo "expected '$SRC_TGZ' not found";
      exit 1;
   fi
 - cd ../../
 - make build-openssl-server
 - ghc -threaded -DUSE_CABAL --make test-scripts/TestClient && echo "BUILDING TEST OK" || echo "BUILDING TEST FAILED"
 - if [ -x test-scripts/TestClient ]; then touch debug.log; ./test-scripts/TestClient debug.log; cat debug.log; fi
